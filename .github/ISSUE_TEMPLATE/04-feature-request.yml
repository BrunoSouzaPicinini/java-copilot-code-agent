name: ‚ú® Solicita√ß√£o de Nova Funcionalidade
description: Propor uma nova funcionalidade ou melhoria para o sistema
title: "[FUNCIONALIDADE] "
labels: ["enhancement", "funcionalidade", "professor"]
assignees: ["copilot"]
body:
  - type: markdown
    attributes:
      value: |
        ## ‚ú® Nova Funcionalidade ou Melhoria
        
        Use este formul√°rio para solicitar uma nova funcionalidade ou melhoria no sistema de atividades extracurriculares.

  - type: textarea
    id: feature-description
    attributes:
      label: "üí° Descri√ß√£o da Funcionalidade"
      description: "Descreva a funcionalidade que voc√™ gostaria de ver implementada"
      placeholder: "Ex: Gostaria de poder enviar mensagens para todos os estudantes de uma atividade..."
    validations:
      required: true

  - type: textarea
    id: problem-motivation
    attributes:
      label: "‚ùì Qual Problema Isso Resolve?"
      description: "Explique qual necessidade ou dificuldade atual esta funcionalidade ajudaria"
      placeholder: "Ex: Atualmente √© dif√≠cil comunicar mudan√ßas de hor√°rio para os estudantes..."
    validations:
      required: true

  - type: textarea
    id: user-story
    attributes:
      label: "üë§ Hist√≥ria do Usu√°rio"
      description: "Descreva como voc√™ usaria essa funcionalidade no dia a dia"
      value: |
        Como professor(a), eu gostaria de [funcionalidade]
        Para que eu possa [benef√≠cio/objetivo]
        De modo que [resultado esperado]
      placeholder: "Descreva o cen√°rio de uso pr√°tico"
    validations:
      required: true

  - type: dropdown
    id: feature-category
    attributes:
      label: "üè∑Ô∏è Categoria da Funcionalidade"
      description: "Que tipo de melhoria √© esta?"
      options:
        - "Comunica√ß√£o (notifica√ß√µes, mensagens)"
        - "Relat√≥rios e estat√≠sticas"
        - "Interface e usabilidade"
        - "Gerenciamento de estudantes"
        - "Gerenciamento de atividades"
        - "Autentica√ß√£o e seguran√ßa"
        - "Integra√ß√£o com outros sistemas"
        - "Outros"
    validations:
      required: true

  - type: dropdown
    id: priority
    attributes:
      label: "üìä Prioridade"
      description: "Qu√£o importante √© esta funcionalidade para voc√™?"
      options:
        - "Muito alta - Seria extremamente √∫til no dia a dia"
        - "Alta - Melhoraria significativamente o trabalho"
        - "M√©dia - Seria uma melhoria conveniente"
        - "Baixa - Seria legal de ter, mas n√£o √© essencial"
    validations:
      required: true

  - type: textarea
    id: detailed-requirements
    attributes:
      label: "üìã Requisitos Detalhados"
      description: "Liste caracter√≠sticas espec√≠ficas que a funcionalidade deveria ter"
      placeholder: |
        Ex:
        - Poder selecionar estudantes individualmente ou todos
        - Mensagem deve ter limite de caracteres
        - Estudantes devem receber por email
        - Deve ter hist√≥rico de mensagens enviadas
    validations:
      required: true

  - type: textarea
    id: examples-references
    attributes:
      label: "üìö Exemplos ou Refer√™ncias"
      description: "Tem algum exemplo de como isso funciona em outros sistemas? Links, screenshots, etc."
      placeholder: "Ex: O WhatsApp permite isso assim... O sistema da escola X tem uma fun√ß√£o similar..."
    validations:
      required: false

  - type: textarea
    id: constraints-limitations
    attributes:
      label: "‚ö†Ô∏è Restri√ß√µes ou Limita√ß√µes"
      description: "H√° alguma restri√ß√£o que devemos considerar? (privacidade, regulamentos, etc.)"
      placeholder: "Ex: S√≥ professores podem enviar mensagens, deve respeitar LGPD, n√£o pode ser usado fora do hor√°rio escolar..."
    validations:
      required: false

  - type: checkboxes
    id: acceptance-criteria
    attributes:
      label: "‚úÖ Crit√©rios de Aceita√ß√£o (como saberemos que est√° pronto)"
      description: "Marque o que deve acontecer para considerarmos a funcionalidade completa"
      options:
        - label: "Funcionalidade deve estar acess√≠vel na interface principal"
        - label: "Deve funcionar conforme descrito nos requisitos"
        - label: "Deve ser intuitiva para outros professores usarem"
        - label: "N√£o deve quebrar funcionalidades existentes"
        - label: "Deve ser testada com dados reais"

  - type: dropdown
    id: implementation-complexity
    attributes:
      label: "üîß Complexidade Estimada (sua percep√ß√£o)"
      description: "Na sua opini√£o, qu√£o complexo seria implementar isso?"
      options:
        - "Simples - Parece ser uma mudan√ßa pequena"
        - "M√©dio - Pode precisar de algumas altera√ß√µes"
        - "Complexo - Parece exigir mudan√ßas significativas"
        - "N√£o tenho ideia da complexidade t√©cnica"
    validations:
      required: false

  - type: markdown
    attributes:
      value: |
        ---
        
        ### ü§ñ Para o Agente Copilot
        
        **Contexto**: Implementa√ß√£o de nova funcionalidade no sistema de gerenciamento escolar.
        
        **Processo de desenvolvimento**:
        1. Analisar a viabilidade t√©cnica dentro da arquitetura existente
        2. Identificar componentes que precisam ser criados ou modificados
        3. Definir API REST necess√°ria (se aplic√°vel)
        4. Implementar seguindo Clean Architecture
        5. Criar testes para a nova funcionalidade
        6. Integrar com frontend existente
        7. Documentar a nova funcionalidade
        
        **Considera√ß√µes arquiteturais**:
        - Seguir padr√µes de Clean Architecture
        - Adicionar no dom√≠nio se for regra de neg√≥cio
        - Criar use cases na camada de aplica√ß√£o
        - Implementar controllers REST se necess√°rio
        - Atualizar frontend seguindo padr√µes existentes
        
        **Arquivos base para refer√™ncia**:
        - `src/main/java/com/mergingtonhigh/schoolmanagement/domain/` (regras de neg√≥cio)
        - `src/main/java/com/mergingtonhigh/schoolmanagement/application/` (casos de uso)
        - `src/main/java/com/mergingtonhigh/schoolmanagement/presentation/` (API REST)
        - `src/main/java/com/mergingtonhigh/schoolmanagement/infrastructure/` (persist√™ncia)
        - `src/main/resources/static/` (interface web)
        
        **Limita√ß√µes**:
        - Manter compatibilidade com funcionalidades existentes
        - Seguir padr√µes de seguran√ßa e valida√ß√£o estabelecidos
        - N√£o alterar arquitetura fundamental
        - Implementar de forma incremental e test√°vel